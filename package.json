{
  "name": "lifetoys",
  "version": "1.0.0",
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "eject": "react-scripts eject",
    "format": "prettier --write ./template/src/**/*.{ts,tsx,css}",
    "lint": "eslint './src/**/*.{ts,tsx}'",
    "type-check": "tsc"
  },
  "license": "GPL",
  "engines": {
    "node": ">=16.20.0"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.16.11",
    "@babel/preset-react": "^7.16.7",
    "@reduxjs/toolkit": "^1.8.1",
    "@types/lodash": "^4.14.195",
    "@types/node": "^17.0.25",
    "@types/react": "^18.0.6",
    "@types/react-dom": "^18.0.2",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "babel-eslint": "^10.1.0",
    "eslint": "^8.44.0",
    "eslint-config-react-app": "^7.0.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-react": "^7.29.4",
    "eslint-plugin-react-hooks": "^4.4.0",
    "prettier": "^2.6.2",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-redux": "^8.0.1",
    "react-scripts": "^5.0.1",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "dis-gui-lifetoys": "^3.0.0",
    "lodash": "^4.17.21",
    "utility-types": "^3.10.0"
  },
  "eslintConfig": {
    "extends": [
      "react-app"
    ],
    "rules": {
      "semi": [
        "error",
        "always"
      ],
      "quotes": [
        "error",
        "single",
        {
          "avoidEscape": true,
          "allowTemplateLiterals": true
        }
      ],
      "max-len": [
        "error",
        {
          "code": 120
        }
      ],
      "comma-dangle": [
        "error",
        {
          "arrays": "always-multiline",
          "objects": "always-multiline",
          "imports": "always-multiline",
          "exports": "always-multiline",
          "functions": "always-multiline"
        }
      ],
      "no-multiple-empty-lines": [
        "error",
        {
          "max": 1
        }
      ],
      "lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true
        }
      ],
      "padding-line-between-statements": [
        "error",
        {
          "blankLine": "always",
          "prev": [
            "block",
            "block-like"
          ],
          "next": "*"
        },
        {
          "blankLine": "always",
          "prev": [
            "import",
            "export"
          ],
          "next": [
            "class",
            "expression",
            "block",
            "block-like",
            "let",
            "var",
            "const"
          ]
        },
        {
          "blankLine": "never",
          "prev": "const",
          "next": "const"
        },
        {
          "blankLine": "always",
          "prev": "const",
          "next": [
            "expression",
            "block",
            "block-like",
            "let",
            "var"
          ]
        },
        {
          "blankLine": "never",
          "prev": "var",
          "next": "var"
        },
        {
          "blankLine": "always",
          "prev": "var",
          "next": [
            "expression",
            "block",
            "block-like",
            "let",
            "const"
          ]
        },
        {
          "blankLine": "never",
          "prev": "let",
          "next": "let"
        },
        {
          "blankLine": "always",
          "prev": "let",
          "next": [
            "expression",
            "block",
            "block-like",
            "var",
            "const"
          ]
        },
        {
          "blankLine": "always",
          "prev": "*",
          "next": "if"
        },
        {
          "blankLine": "always",
          "prev": "*",
          "next": "return"
        }
      ],
      "no-console": [
        "warn",
        {
          "allow": [
            "clear",
            "info",
            "error",
            "dir",
            "trace"
          ]
        }
      ],
      "key-spacing": [
        "error",
        {
          "beforeColon": false,
          "afterColon": true
        }
      ],
      "react/jsx-curly-spacing": [
        2,
        {
          "when": "always",
          "attributes": {
            "allowMultiline": true
          },
          "children": true,
          "spacing": {
            "objectLiterals": "never"
          }
        }
      ],
      "object-curly-spacing": [
        "error",
        "always",
        {
          "arraysInObjects": true,
          "objectsInObjects": true
        }
      ]
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
